// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Railyatri;

#nullable disable

namespace Railyatri.Migrations
{
    [DbContext(typeof(Traindb))]
    partial class TraindbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Railyatri.AvailabilitySchedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainslistId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("TrainslistId");

                    b.ToTable("AvailabilitySchedule");
                });

            modelBuilder.Entity("Railyatri.TrainSchedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainNumberID")
                        .HasColumnType("int");

                    b.Property<int?>("Trainslistid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Trainslistid");

                    b.ToTable("TrainSchedule");
                });

            modelBuilder.Entity("Railyatri.Trainslist", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("FromStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainNumber")
                        .HasColumnType("int");

                    b.Property<string>("Trainname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Trainslist");
                });

            modelBuilder.Entity("Railyatri.AvailabilitySchedule", b =>
                {
                    b.HasOne("Railyatri.Trainslist", null)
                        .WithMany("AvailabilitySchedules")
                        .HasForeignKey("TrainslistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Railyatri.TrainSchedule", b =>
                {
                    b.HasOne("Railyatri.Trainslist", null)
                        .WithMany("TrainSchedules")
                        .HasForeignKey("Trainslistid");
                });

            modelBuilder.Entity("Railyatri.Trainslist", b =>
                {
                    b.Navigation("AvailabilitySchedules");

                    b.Navigation("TrainSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
